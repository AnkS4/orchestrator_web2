# HTTP → redirect to HTTPS
server {
    listen 80;
    server_name co2.services.upcxels.upc.edu interpolation.services.upcxels.upc.edu;

    location / {
        return 301 https://$host$request_uri;
    }
}

# CO2 service → HTTPS
server {
    listen 443 ssl;
    server_name co2.services.upcxels.upc.edu;

    ssl_certificate /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;

    # This block forces client to go to /jupyter/ first
    location = / {
        return 301 https://$host/jupyter/;
    }

    # This block proxies all /jupyter/* to inner nginx correctly
    location /jupyter/ {
        proxy_pass http://localhost:8001/jupyter/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_buffering off;
    }
}

# Interpolation service → HTTPS
server {
    listen 443 ssl;
    server_name interpolation.services.upcxels.upc.edu;

    ssl_certificate /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;

    # This block forces client to go to /jupyter/ first
    location = / {
        return 301 https://$host/jupyter/;
    }

    location /jupyter/ {
        proxy_pass http://localhost:8002/jupyter/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_buffering off;
    }
}
